// #include <optional>
// #include <tuple>
// #include "MessageDataTypes.h"


// class DoIPAPI
// {
// public:

//     enum EDoIPRequest
//     {
//         REQUEST_INVALID = -1,

//         ECU_DATA_START = EVENT_DATA_UPDATE_START,
//         BATTERY_VOLTAGE = EVENT_DATA_UPDATE_BATTERY_VOLTAGE,
//         MOTOR_TEMPERATURE = EVENT_DATA_UPDATE_MOTOR_TEMPERATURE,
//         AIR_MASS = EVENT_DATA_UPDATE_AIR_MASS,
//         INTAKE_AIR_TEMPERATURE = EVENT_DATA_UPDATE_INTAKE_AIR_TEMPERATURE,
//         BOOST_PRESSURE_SET = EVENT_DATA_UPDATE_BOOST_PRESSURE_SET,
//         BOOST_PRESSURE_ACT = EVENT_DATA_UPDATE_BOOST_PRESSURE_ACT,
//         RAIL_PRESSURE_SET = EVENT_DATA_UPDATE_RAIL_PRESSURE_SET,
//         RAIL_PRESSURE_ACT = EVENT_DATA_UPDATE_RAIL_PRESSURE_ACT,
//         AIR_MASS_SET = EVENT_DATA_UPDATE_AIR_MASS_SET,
//         AIR_MASS_ACT = EVENT_DATA_UPDATE_AIR_MASS_ACT,
//         AMBIENT_PRESSURE = EVENT_DATA_UPDATE_AMBIENT_PRESSURE,
//         FUEL_TEMPERATURE = EVENT_DATA_UPDATE_FUEL_TEMPERATURE,
//         TEMP_BEFORE_PART_FILTER = EVENT_DATA_UPDATE_TEMP_BEFORE_PART_FILTER,
//         TEMP_BEFORE_CATALYST = EVENT_DATA_UPDATE_TEMP_BEFORE_CATALYST,
//         PART_FILTER_DIST_SINCE_REGEN = EVENT_DATA_UPDATE_PART_FILTER_DIST_SINCE_REGEN,
//         EXHAUST_BACK_PRESSURE = EVENT_DATA_UPDATE_EXHAUST_BACK_PRESSURE,
//         OIL_PRESSURE_SWITCH = EVENT_DATA_UPDATE_OIL_PRESSURE_SWITCH,
//         PART_FILTER_REGENERATION_REQUEST = EVENT_DATA_UPDATE_PART_FILTER_REGENERATION_REQUEST,
//         PART_FILTER_REGENERATION = EVENT_DATA_UPDATE_PART_FILTER_REGENERATION,
//         PART_FILTER_UNBLOCK_REGENERATION = EVENT_DATA_UPDATE_PART_FILTER_UNBLOCK_REGENERATION,
//         BREAK_LIGHT = EVENT_DATA_UPDATE_BREAK_LIGHT,
//         RPM = EVENT_DATA_UPDATE_RPM,
//         SPEED = EVENT_DATA_UPDATE_SPEED,
//         ACCELERATION = EVENT_DATA_UPDATE_ACCELERATION,
//         OIL_TEMPERATURE = EVENT_DATA_UPDATE_OIL_TEMPERATURE,
//         ECU_DATA_END = EVENT_DATA_UPDATE_END
//     };


//     constexpr int payload_size_map[ECU_DATA_END + 1] =
//     {

//     };


// 	DoIPAPI(){}
// 	~DoIPAPI(){}

// 	std::optional<SMessage> processReceivedData(char data[], size_t len);
// 	void prepareDoIPQueryPayload(EDoIPRequest dataCode, char** generatedQuery, size_t queryLen);

// private:



// };
