/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DATEVIEWBASE_HPP
#define DATEVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/date_screen/DatePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/scrollers/ScrollWheel.hpp>
#include <gui/containers/DayElement.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class DateViewBase : public touchgfx::View<DatePresenter>
{
public:
    DateViewBase();
    virtual ~DateViewBase();
    virtual void setupScreen();

    virtual void scrollWheel_MonthUpdateItem(DayElement& item, int16_t itemIndex)
    {
        // Override and implement this function in Date
    }

    virtual void scrollWheel_DayUpdateItem(DayElement& item, int16_t itemIndex)
    {
        // Override and implement this function in Date
    }

    virtual void scrollWheel_MinuteUpdateItem(DayElement& item, int16_t itemIndex)
    {
        // Override and implement this function in Date
    }

    virtual void scrollWheel_HourUpdateItem(DayElement& item, int16_t itemIndex)
    {
        // Override and implement this function in Date
    }

    virtual void scrollWheel_YearUpdateItem(DayElement& item, int16_t itemIndex)
    {
        // Override and implement this function in Date
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::ScalableImage BackgroundImage;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::BoxWithBorder boxWithBorder1_1;
    touchgfx::BoxWithBorder boxWithBorder1_2;
    touchgfx::BoxWithBorder boxWithBorder1_3;
    touchgfx::BoxWithBorder boxWithBorder1_4;
    touchgfx::Container container1;
    touchgfx::DigitalClock Clock;
    touchgfx::TextArea MainTitle;
    touchgfx::TextArea Text_Date_1;
    touchgfx::Button HomeButton;
    touchgfx::TextAreaWithOneWildcard Text_Temperature;
    touchgfx::ScalableImage HomeIcon;
    touchgfx::ScrollWheel scrollWheel_Month;
    touchgfx::DrawableListItems<DayElement, 3> scrollWheel_MonthListItems;
    touchgfx::ScrollWheel scrollWheel_Day;
    touchgfx::DrawableListItems<DayElement, 3> scrollWheel_DayListItems;
    touchgfx::ScrollWheel scrollWheel_Minute;
    touchgfx::DrawableListItems<DayElement, 3> scrollWheel_MinuteListItems;
    touchgfx::ScrollWheel scrollWheel_Hour;
    touchgfx::DrawableListItems<DayElement, 3> scrollWheel_HourListItems;
    touchgfx::ScrollWheel scrollWheel_Year;
    touchgfx::DrawableListItems<DayElement, 3> scrollWheel_YearListItems;
    touchgfx::TextArea text_Day;
    touchgfx::TextArea text_TimeColon;
    touchgfx::TextArea text_Hour;
    touchgfx::TextArea text_Minute;
    touchgfx::TextArea text_Month;
    touchgfx::TextArea text_Year;
    touchgfx::ButtonWithLabel button_Confirm;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXT_TEMPERATURE_SIZE = 4;
    touchgfx::Unicode::UnicodeChar Text_TemperatureBuffer[TEXT_TEMPERATURE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<DateViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;
    touchgfx::Callback<DateViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // DATEVIEWBASE_HPP
