/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DIAGNOSE_KOMBIVIEWBASE_HPP
#define DIAGNOSE_KOMBIVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/diagnose_kombi_screen/Diagnose_KOMBIPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/containers/ModalWindow.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class Diagnose_KOMBIViewBase : public touchgfx::View<Diagnose_KOMBIPresenter>
{
public:
    Diagnose_KOMBIViewBase();
    virtual ~Diagnose_KOMBIViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void ButtonUartClicked()
    {
        // Override and implement this function in Diagnose_KOMBI
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Container ContainterAdditionalData;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ToggleButtonTrigger >  >  Button_SendUart;
    touchgfx::TextAreaWithOneWildcard Text_LastReqCycle;
    touchgfx::Container containerParameters;
    touchgfx::ScalableImage scalableImage1_1_1_2_2;
    touchgfx::ScalableImage scalableImage2_1_1_1_1_1_2;
    touchgfx::ScalableImage scalableImage1_1_1_2_1;
    touchgfx::ScalableImage scalableImage2_1_1_1_1_1_1;
    touchgfx::ScalableImage scalableImage1_1_1_2;
    touchgfx::ScalableImage scalableImage2_1_1_1_1_1;
    touchgfx::TextArea text_TotalDist;
    touchgfx::TextAreaWithOneWildcard text_ValueTotalDist;
    touchgfx::TextArea text_Speed;
    touchgfx::TextAreaWithOneWildcard text_ValueSpeed;
    touchgfx::TextArea text_RPMOnDisp;
    touchgfx::TextAreaWithOneWildcard text_ValueRPMOnDisp;
    touchgfx::Container container1;
    touchgfx::Box box2;
    touchgfx::DigitalClock Clock;
    touchgfx::TextArea Text_KombiTitile;
    touchgfx::TextAreaWithOneWildcard Text_Date;
    touchgfx::ClickListener< touchgfx::ScalableImage > HomeIcon;
    touchgfx::ClickListener< touchgfx::ScalableImage > ReturnIcon;
    touchgfx::Button HomeButton;
    touchgfx::Button ReturnButton;
    touchgfx::TextAreaWithOneWildcard Text_Temperature;
    touchgfx::ModalWindow ConnectedModalWindow;
    touchgfx::TextAreaWithOneWildcard Text_Popup;
    touchgfx::ButtonWithLabel ButtonHidePopup;

    /*
     * Wildcard Buffers
     */
    static const uint16_t BUTTON_SENDUART_SIZE = 40;
    touchgfx::Unicode::UnicodeChar Button_SendUartBuffer[BUTTON_SENDUART_SIZE];
    static const uint16_t TEXT_LASTREQCYCLE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar Text_LastReqCycleBuffer[TEXT_LASTREQCYCLE_SIZE];
    static const uint16_t TEXT_VALUETOTALDIST_SIZE = 20;
    touchgfx::Unicode::UnicodeChar text_ValueTotalDistBuffer[TEXT_VALUETOTALDIST_SIZE];
    static const uint16_t TEXT_VALUESPEED_SIZE = 20;
    touchgfx::Unicode::UnicodeChar text_ValueSpeedBuffer[TEXT_VALUESPEED_SIZE];
    static const uint16_t TEXT_VALUERPMONDISP_SIZE = 20;
    touchgfx::Unicode::UnicodeChar text_ValueRPMOnDispBuffer[TEXT_VALUERPMONDISP_SIZE];
    static const uint16_t TEXT_DATE_SIZE = 11;
    touchgfx::Unicode::UnicodeChar Text_DateBuffer[TEXT_DATE_SIZE];
    static const uint16_t TEXT_TEMPERATURE_SIZE = 4;
    touchgfx::Unicode::UnicodeChar Text_TemperatureBuffer[TEXT_TEMPERATURE_SIZE];
    static const uint16_t TEXT_POPUP_SIZE = 46;
    touchgfx::Unicode::UnicodeChar Text_PopupBuffer[TEXT_POPUP_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Diagnose_KOMBIViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<Diagnose_KOMBIViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // DIAGNOSE_KOMBIVIEWBASE_HPP
