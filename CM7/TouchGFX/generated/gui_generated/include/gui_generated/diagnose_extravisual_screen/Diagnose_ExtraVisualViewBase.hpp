/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DIAGNOSE_EXTRAVISUALVIEWBASE_HPP
#define DIAGNOSE_EXTRAVISUALVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/diagnose_extravisual_screen/Diagnose_ExtraVisualPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/Gauge.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndClear.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>
#include <gui/containers/graphValueWidget.hpp>
#include <touchgfx/containers/ModalWindow.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class Diagnose_ExtraVisualViewBase : public touchgfx::View<Diagnose_ExtraVisualPresenter>
{
public:
    Diagnose_ExtraVisualViewBase();
    virtual ~Diagnose_ExtraVisualViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void ButtonUartClicked()
    {
        // Override and implement this function in Diagnose_ExtraVisual
    }
    virtual void graphOil_Clicked(AbstractDataGraph::GraphClickEvent value)
    {
        // Override and implement this function in Diagnose_ExtraVisual
    }
    virtual void graphCoolant_Clicked(AbstractDataGraph::GraphClickEvent value)
    {
        // Override and implement this function in Diagnose_ExtraVisual
    }
    virtual void graphOil_Dragged(AbstractDataGraph::GraphDragEvent value)
    {
        // Override and implement this function in Diagnose_ExtraVisual
    }
    virtual void graphCoolant_Dragged(AbstractDataGraph::GraphDragEvent value)
    {
        // Override and implement this function in Diagnose_ExtraVisual
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box3;
    touchgfx::Box box3_1;
    touchgfx::Container ContainterAdditionalData;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ToggleButtonTrigger >  >  Button_SendUart;
    touchgfx::TextAreaWithOneWildcard Text_LastReqCycle;
    touchgfx::Container container1;
    touchgfx::Box box2;
    touchgfx::DigitalClock Clock;
    touchgfx::TextArea Text_ExtraVisualDME;
    touchgfx::ClickListener< touchgfx::ScalableImage > HomeIcon;
    touchgfx::ClickListener< touchgfx::ScalableImage > ReturnIcon;
    touchgfx::Button HomeButton;
    touchgfx::Button ReturnButton;
    touchgfx::TextAreaWithOneWildcard Text_Temperature;
    touchgfx::TextAreaWithOneWildcard Text_Date;
    touchgfx::Gauge gauge_RPM;
    touchgfx::GraphWrapAndClear<1000> dynamicGraph_Oil;
    touchgfx::GraphElementGridY dynamicGraph_OilMajorYAxisGrid;
    touchgfx::GraphLabelsX dynamicGraph_OilMajorXAxisLabel;
    touchgfx::GraphLabelsY dynamicGraph_OilMajorYAxisLabel;
    touchgfx::GraphElementLine dynamicGraph_OilLine1;
    touchgfx::PainterRGB888 dynamicGraph_OilLine1Painter;
    touchgfx::GraphWrapAndClear<1000> dynamicGraph_Coolant;
    touchgfx::GraphElementGridY dynamicGraph_CoolantMajorYAxisGrid;
    touchgfx::GraphLabelsX dynamicGraph_CoolantMajorXAxisLabel;
    touchgfx::GraphLabelsY dynamicGraph_CoolantMajorYAxisLabel;
    touchgfx::GraphElementLine dynamicGraph_CoolantLine1;
    touchgfx::PainterRGB888 dynamicGraph_CoolantLine1Painter;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea textArea2_1;
    graphValueWidget graphValueWidget_oil;
    graphValueWidget graphValueWidget_coolant;
    touchgfx::ModalWindow ConnectedModalWindow;
    touchgfx::TextAreaWithOneWildcard Text_Popup;
    touchgfx::ButtonWithLabel ButtonHidePopup;

    /*
     * Wildcard Buffers
     */
    static const uint16_t BUTTON_SENDUART_SIZE = 40;
    touchgfx::Unicode::UnicodeChar Button_SendUartBuffer[BUTTON_SENDUART_SIZE];
    static const uint16_t TEXT_LASTREQCYCLE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar Text_LastReqCycleBuffer[TEXT_LASTREQCYCLE_SIZE];
    static const uint16_t TEXT_TEMPERATURE_SIZE = 4;
    touchgfx::Unicode::UnicodeChar Text_TemperatureBuffer[TEXT_TEMPERATURE_SIZE];
    static const uint16_t TEXT_DATE_SIZE = 11;
    touchgfx::Unicode::UnicodeChar Text_DateBuffer[TEXT_DATE_SIZE];
    static const uint16_t TEXT_POPUP_SIZE = 46;
    touchgfx::Unicode::UnicodeChar Text_PopupBuffer[TEXT_POPUP_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Diagnose_ExtraVisualViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<Diagnose_ExtraVisualViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<Diagnose_ExtraVisualViewBase, const touchgfx::AbstractDataGraph&, const touchgfx::AbstractDataGraph::GraphClickEvent&> graphClickedCallback;
    touchgfx::Callback<Diagnose_ExtraVisualViewBase, const touchgfx::AbstractDataGraph&, const touchgfx::AbstractDataGraph::GraphDragEvent&> graphDraggedCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void graphClickedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphClickEvent& value);
    void graphDraggedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphDragEvent& value);

};

#endif // DIAGNOSE_EXTRAVISUALVIEWBASE_HPP
