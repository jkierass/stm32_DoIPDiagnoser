/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DIAGNOSE_MOTOR1VIEWBASE_HPP
#define DIAGNOSE_MOTOR1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/diagnose_motor1_screen/Diagnose_Motor1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/scrollers/ScrollList.hpp>
#include <gui/containers/ParameterListElement.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class Diagnose_Motor1ViewBase : public touchgfx::View<Diagnose_Motor1Presenter>
{
public:
    Diagnose_Motor1ViewBase();
    virtual ~Diagnose_Motor1ViewBase();
    virtual void setupScreen();

    virtual void DiagnoseMotorListUpdateItem(ParameterListElement& item, int16_t itemIndex)
    {
        // Override and implement this function in Diagnose_Motor1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScrollList DiagnoseMotorList;
    touchgfx::DrawableListItems<ParameterListElement, 11> DiagnoseMotorListListItems;
    touchgfx::Container container1;
    touchgfx::Box box2;
    touchgfx::DigitalClock Clock;
    touchgfx::TextArea Text_MotorTitile;
    touchgfx::ClickListener< touchgfx::ScalableImage > HomeIcon;
    touchgfx::ClickListener< touchgfx::ScalableImage > ReturnIcon;
    touchgfx::ClickListener< touchgfx::ScalableImage > NextParameterIcon;
    touchgfx::Button HomeButton;
    touchgfx::Button ReturnButton;
    touchgfx::Button NextParameter;
    touchgfx::TextAreaWithOneWildcard Text_Temperature;
    touchgfx::TextAreaWithOneWildcard Text_Date;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXT_TEMPERATURE_SIZE = 4;
    touchgfx::Unicode::UnicodeChar Text_TemperatureBuffer[TEXT_TEMPERATURE_SIZE];
    static const uint16_t TEXT_DATE_SIZE = 11;
    touchgfx::Unicode::UnicodeChar Text_DateBuffer[TEXT_DATE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Diagnose_Motor1ViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;
    touchgfx::Callback<Diagnose_Motor1ViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // DIAGNOSE_MOTOR1VIEWBASE_HPP
