/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/diagnose_ihka_screen/Diagnose_IHKAViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Diagnose_IHKAViewBase::Diagnose_IHKAViewBase() :
    buttonCallback(this, &Diagnose_IHKAViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    containerParameters.setPosition(0, 75, 800, 405);
    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_CONTAINERS_LARGE_NARROW_NEUTRAL_ID));
    scalableImage2.setPosition(0, 0, 800, 4);
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage2);

    scalableImage1_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BARS_272X480_TOP_DIM_DARK_ID));
    scalableImage1_1_1_1.setPosition(0, 88, 800, 80);
    scalableImage1_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage1_1_1_1);

    scalableImage1_1_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BARS_272X480_TOP_DIM_DARK_ID));
    scalableImage1_1_1_1_1.setPosition(0, 4, 800, 80);
    scalableImage1_1_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage1_1_1_1_1);

    text_Evap.setPosition(12, 22, 576, 44);
    text_Evap.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_Evap.setLinespacing(0);
    text_Evap.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HJ7K));
    containerParameters.add(text_Evap);

    text_ValueEvap.setPosition(643, 21, 142, 45);
    text_ValueEvap.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_ValueEvap.setLinespacing(0);
    Unicode::snprintf(text_ValueEvapBuffer, TEXT_VALUEEVAP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_V9Z1).getText());
    text_ValueEvap.setWildcard(text_ValueEvapBuffer);
    text_ValueEvap.setTypedText(touchgfx::TypedText(T___SINGLEUSE_117R));
    containerParameters.add(text_ValueEvap);

    scalableImage2_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_CONTAINERS_LARGE_NARROW_NEUTRAL_ID));
    scalableImage2_1.setPosition(0, 84, 800, 4);
    scalableImage2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage2_1);

    text_VentTemp.setPosition(12, 107, 483, 43);
    text_VentTemp.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_VentTemp.setLinespacing(0);
    text_VentTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_22Y0));
    containerParameters.add(text_VentTemp);

    text_ValueVentTemp.setPosition(614, 107, 171, 43);
    text_ValueVentTemp.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_ValueVentTemp.setLinespacing(0);
    Unicode::snprintf(text_ValueVentTempBuffer, TEXT_VALUEVENTTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_74NS).getText());
    text_ValueVentTemp.setWildcard(text_ValueVentTempBuffer);
    text_ValueVentTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3D0G));
    containerParameters.add(text_ValueVentTemp);

    scalableImage1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BARS_272X480_TOP_DIM_DARK_ID));
    scalableImage1_1_1.setPosition(0, 172, 800, 80);
    scalableImage1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage1_1_1);

    scalableImage2_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_CONTAINERS_LARGE_NARROW_NEUTRAL_ID));
    scalableImage2_1_1_1.setPosition(0, 168, 800, 4);
    scalableImage2_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage2_1_1_1);

    scalableImage2_1_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_CONTAINERS_LARGE_NARROW_NEUTRAL_ID));
    scalableImage2_1_1_1_1.setPosition(0, 252, 800, 4);
    scalableImage2_1_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage2_1_1_1_1);

    text_TempSelectLeft.setPosition(12, 194, 555, 45);
    text_TempSelectLeft.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_TempSelectLeft.setLinespacing(0);
    text_TempSelectLeft.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2XDW));
    containerParameters.add(text_TempSelectLeft);

    text_ValueTempSelectorLeft.setPosition(651, 196, 134, 43);
    text_ValueTempSelectorLeft.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_ValueTempSelectorLeft.setLinespacing(0);
    Unicode::snprintf(text_ValueTempSelectorLeftBuffer, TEXT_VALUETEMPSELECTORLEFT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AQVY).getText());
    text_ValueTempSelectorLeft.setWildcard(text_ValueTempSelectorLeftBuffer);
    text_ValueTempSelectorLeft.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5H0I));
    containerParameters.add(text_ValueTempSelectorLeft);

    scalableImage1_1_1_2.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BARS_272X480_TOP_DIM_DARK_ID));
    scalableImage1_1_1_2.setPosition(0, 256, 800, 80);
    scalableImage1_1_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage1_1_1_2);

    scalableImage2_1_1_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_CONTAINERS_LARGE_NARROW_NEUTRAL_ID));
    scalableImage2_1_1_1_1_1.setPosition(0, 336, 800, 4);
    scalableImage2_1_1_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage2_1_1_1_1_1);

    text_TempSelectRight.setPosition(13, 278, 533, 46);
    text_TempSelectRight.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_TempSelectRight.setLinespacing(0);
    text_TempSelectRight.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OPG0));
    containerParameters.add(text_TempSelectRight);

    text_ValueTempSelectorRight.setPosition(659, 280, 124, 44);
    text_ValueTempSelectorRight.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_ValueTempSelectorRight.setLinespacing(0);
    Unicode::snprintf(text_ValueTempSelectorRightBuffer, TEXT_VALUETEMPSELECTORRIGHT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_84AF).getText());
    text_ValueTempSelectorRight.setWildcard(text_ValueTempSelectorRightBuffer);
    text_ValueTempSelectorRight.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TP5P));
    containerParameters.add(text_ValueTempSelectorRight);

    add(containerParameters);

    container1.setPosition(0, 0, 800, 75);
    box2.setPosition(0, -1, 800, 75);
    box2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    container1.add(box2);

    Clock.setPosition(659, 7, 124, 26);
    Clock.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Clock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GF6Z));
    Clock.displayLeadingZeroForHourIndicator(true);
    Clock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR_NO_SECONDS);
    Clock.setTime24Hour(10, 10, 0);
    container1.add(Clock);

    Text_IHKA.setPosition(198, 12, 240, 52);
    Text_IHKA.setColor(touchgfx::Color::getColorFromRGB(163, 186, 255));
    Text_IHKA.setLinespacing(0);
    Text_IHKA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2O72));
    container1.add(Text_IHKA);

    HomeIcon.setBitmap(touchgfx::Bitmap(BITMAP_HOME_ICON_ID));
    HomeIcon.setPosition(12, 9, 55, 55);
    HomeIcon.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container1.add(HomeIcon);

    ReturnIcon.setBitmap(touchgfx::Bitmap(BITMAP_RETURN_ID));
    ReturnIcon.setPosition(86, 10, 55, 55);
    ReturnIcon.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container1.add(ReturnIcon);

    HomeButton.setXY(12, 6);
    HomeButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_DISABLED_ID));
    HomeButton.setAction(buttonCallback);
    container1.add(HomeButton);

    ReturnButton.setXY(83, 6);
    ReturnButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_DISABLED_ID));
    ReturnButton.setAction(buttonCallback);
    container1.add(ReturnButton);

    Text_Temperature.setPosition(546, 10, 105, 52);
    Text_Temperature.setColor(touchgfx::Color::getColorFromRGB(247, 64, 174));
    Text_Temperature.setLinespacing(0);
    Unicode::snprintf(Text_TemperatureBuffer, TEXT_TEMPERATURE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QW4M).getText());
    Text_Temperature.setWildcard(Text_TemperatureBuffer);
    Text_Temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S3JG));
    container1.add(Text_Temperature);

    Text_Date.setPosition(657, 36, 128, 24);
    Text_Date.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Text_Date.setLinespacing(0);
    Unicode::snprintf(Text_DateBuffer, TEXT_DATE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I7C8).getText());
    Text_Date.setWildcard(Text_DateBuffer);
    Text_Date.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VZJ5));
    container1.add(Text_Date);

    add(container1);

    ConnectedModalWindow.setBackground(touchgfx::BitmapId(BITMAP_DARK_THEME_IMAGES_CONTAINERS_LARGE_WIDE_OUTLINED_LIGHT_ID), 160, 105);
    ConnectedModalWindow.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    ConnectedModalWindow.hide();
    Text_Popup.setPosition(61, 40, 377, 160);
    Text_Popup.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Text_Popup.setLinespacing(0);
    Text_Popup.setWideTextAction(WIDE_TEXT_WORDWRAP);
    Unicode::snprintf(Text_PopupBuffer, TEXT_POPUP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I6TS).getText());
    Text_Popup.setWildcard(Text_PopupBuffer);
    Text_Popup.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TKO5));
    ConnectedModalWindow.add(Text_Popup);

    ButtonHidePopup.setXY(143, 211);
    ButtonHidePopup.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUND_PRESSED_ID));
    ButtonHidePopup.setLabelText(touchgfx::TypedText(T___SINGLEUSE_U25L));
    ButtonHidePopup.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtonHidePopup.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtonHidePopup.setAction(buttonCallback);
    ConnectedModalWindow.add(ButtonHidePopup);

    add(ConnectedModalWindow);
}

Diagnose_IHKAViewBase::~Diagnose_IHKAViewBase()
{

}

void Diagnose_IHKAViewBase::setupScreen()
{

}

void Diagnose_IHKAViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &HomeButton)
    {
        //SwitchToMainScreen
        //When HomeButton clicked change screen to MainScreen
        //Go to MainScreen with no screen transition
        application().gotoMainScreenScreenNoTransition();
    }
    if (&src == &ReturnButton)
    {
        //SwitchToDiagnose
        //When ReturnButton clicked change screen to Diagnose
        //Go to Diagnose with no screen transition
        application().gotoDiagnoseScreenNoTransition();
    }
    if (&src == &ButtonHidePopup)
    {
        //hideConnectedPopup
        //When ButtonHidePopup clicked hide ConnectedModalWindow
        //Hide ConnectedModalWindow
        ConnectedModalWindow.setVisible(false);
        ConnectedModalWindow.invalidate();
    }
}
