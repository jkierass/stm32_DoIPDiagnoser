/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/diagnose_kombi_screen/Diagnose_KOMBIViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

Diagnose_KOMBIViewBase::Diagnose_KOMBIViewBase() :
    buttonCallback(this, &Diagnose_KOMBIViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &Diagnose_KOMBIViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    ContainterAdditionalData.setPosition(0, 441, 800, 39);
    Button_SendUart.setBoxWithBorderPosition(0, 0, 334, 38);
    Button_SendUart.setBorderSize(4);
    Button_SendUart.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(186, 2, 112), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(15, 255, 255));
    Button_SendUart.setWildcardText(TypedText(T___SINGLEUSE_56SM));
    Unicode::snprintf(Button_SendUartBuffer, BUTTON_SENDUART_SIZE, "%s", TypedText(T___SINGLEUSE_K59Q).getText());
    Button_SendUart.setWildcardTextBuffer(Button_SendUartBuffer);
    Button_SendUart.setWildcardTextPosition(0, 7, 334, 38);
    Button_SendUart.setWildcardTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
    Button_SendUart.setAction(flexButtonCallback);
    Button_SendUart.setPosition(466, 0, 334, 38);
    ContainterAdditionalData.add(Button_SendUart);

    Text_LastReqCycle.setPosition(10, 6, 428, 32);
    Text_LastReqCycle.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Text_LastReqCycle.setLinespacing(0);
    Unicode::snprintf(Text_LastReqCycleBuffer, TEXT_LASTREQCYCLE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_OQ0U).getText());
    Text_LastReqCycle.setWildcard(Text_LastReqCycleBuffer);
    Text_LastReqCycle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NUPY));
    ContainterAdditionalData.add(Text_LastReqCycle);

    add(ContainterAdditionalData);

    containerParameters.setPosition(0, 74, 800, 406);
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BARS_272X480_TOP_DIM_DARK_ID));
    scalableImage1.setPosition(0, 0, 800, 44);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage1);

    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_CONTAINERS_LARGE_NARROW_NEUTRAL_ID));
    scalableImage2.setPosition(0, 44, 800, 2);
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage2);

    text_TotalDist.setPosition(10, 9, 390, 37);
    text_TotalDist.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_TotalDist.setLinespacing(0);
    text_TotalDist.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7W67));
    containerParameters.add(text_TotalDist);

    text_ValueTotalDist.setPosition(410, 9, 390, 35);
    text_ValueTotalDist.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_ValueTotalDist.setLinespacing(0);
    Unicode::snprintf(text_ValueTotalDistBuffer, TEXT_VALUETOTALDIST_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_GTX1).getText());
    text_ValueTotalDist.setWildcard(text_ValueTotalDistBuffer);
    text_ValueTotalDist.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0OTK));
    containerParameters.add(text_ValueTotalDist);

    scalableImage1_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BARS_272X480_TOP_DIM_DARK_ID));
    scalableImage1_1.setPosition(0, 46, 800, 44);
    scalableImage1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage1_1);

    scalableImage2_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_CONTAINERS_LARGE_NARROW_NEUTRAL_ID));
    scalableImage2_1.setPosition(0, 90, 800, 2);
    scalableImage2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage2_1);

    text_Speed.setPosition(10, 55, 390, 37);
    text_Speed.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_Speed.setLinespacing(0);
    text_Speed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UNKX));
    containerParameters.add(text_Speed);

    text_ValueSpeed.setPosition(410, 55, 390, 35);
    text_ValueSpeed.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_ValueSpeed.setLinespacing(0);
    Unicode::snprintf(text_ValueSpeedBuffer, TEXT_VALUESPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_175D).getText());
    text_ValueSpeed.setWildcard(text_ValueSpeedBuffer);
    text_ValueSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4ZMC));
    containerParameters.add(text_ValueSpeed);

    scalableImage1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BARS_272X480_TOP_DIM_DARK_ID));
    scalableImage1_1_1.setPosition(0, 92, 800, 44);
    scalableImage1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage1_1_1);

    scalableImage2_1_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_CONTAINERS_LARGE_NARROW_NEUTRAL_ID));
    scalableImage2_1_1.setPosition(0, 136, 800, 2);
    scalableImage2_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage2_1_1);

    text_OutsideTemp.setPosition(10, 101, 390, 37);
    text_OutsideTemp.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_OutsideTemp.setLinespacing(0);
    text_OutsideTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_41FN));
    containerParameters.add(text_OutsideTemp);

    text_ValueOutsideTemp.setPosition(410, 101, 390, 35);
    text_ValueOutsideTemp.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_ValueOutsideTemp.setLinespacing(0);
    Unicode::snprintf(text_ValueOutsideTempBuffer, TEXT_VALUEOUTSIDETEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_720Q).getText());
    text_ValueOutsideTemp.setWildcard(text_ValueOutsideTempBuffer);
    text_ValueOutsideTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SBU4));
    containerParameters.add(text_ValueOutsideTemp);

    scalableImage1_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BARS_272X480_TOP_DIM_DARK_ID));
    scalableImage1_1_1_1.setPosition(0, 138, 800, 44);
    scalableImage1_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage1_1_1_1);

    scalableImage2_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_CONTAINERS_LARGE_NARROW_NEUTRAL_ID));
    scalableImage2_1_1_1.setPosition(0, 182, 800, 2);
    scalableImage2_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage2_1_1_1);

    text_RPMOnDisp.setPosition(10, 147, 390, 37);
    text_RPMOnDisp.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_RPMOnDisp.setLinespacing(0);
    text_RPMOnDisp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HCE8));
    containerParameters.add(text_RPMOnDisp);

    text_ValueRPMOnDisp.setPosition(410, 147, 390, 35);
    text_ValueRPMOnDisp.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_ValueRPMOnDisp.setLinespacing(0);
    Unicode::snprintf(text_ValueRPMOnDispBuffer, TEXT_VALUERPMONDISP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ZKC2).getText());
    text_ValueRPMOnDisp.setWildcard(text_ValueRPMOnDispBuffer);
    text_ValueRPMOnDisp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BA1O));
    containerParameters.add(text_ValueRPMOnDisp);

    scalableImage1_1_1_2.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BARS_272X480_TOP_DIM_DARK_ID));
    scalableImage1_1_1_2.setPosition(0, 183, 800, 44);
    scalableImage1_1_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage1_1_1_2);

    scalableImage2_1_1_2.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_CONTAINERS_LARGE_NARROW_NEUTRAL_ID));
    scalableImage2_1_1_2.setPosition(0, 227, 800, 2);
    scalableImage2_1_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage2_1_1_2);

    text_FuelLeft.setPosition(10, 192, 390, 37);
    text_FuelLeft.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_FuelLeft.setLinespacing(0);
    text_FuelLeft.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2FXX));
    containerParameters.add(text_FuelLeft);

    text_ValueFuelLeft.setPosition(410, 192, 390, 35);
    text_ValueFuelLeft.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_ValueFuelLeft.setLinespacing(0);
    Unicode::snprintf(text_ValueFuelLeftBuffer, TEXT_VALUEFUELLEFT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I1AN).getText());
    text_ValueFuelLeft.setWildcard(text_ValueFuelLeftBuffer);
    text_ValueFuelLeft.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6B9I));
    containerParameters.add(text_ValueFuelLeft);

    scalableImage1_1_1_3.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BARS_272X480_TOP_DIM_DARK_ID));
    scalableImage1_1_1_3.setPosition(0, 229, 800, 44);
    scalableImage1_1_1_3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage1_1_1_3);

    scalableImage2_1_1_3.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_CONTAINERS_LARGE_NARROW_NEUTRAL_ID));
    scalableImage2_1_1_3.setPosition(0, 273, 800, 2);
    scalableImage2_1_1_3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage2_1_1_3);

    text_FuelRight.setPosition(10, 238, 390, 37);
    text_FuelRight.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_FuelRight.setLinespacing(0);
    text_FuelRight.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOI7));
    containerParameters.add(text_FuelRight);

    text_ValueFuelRight.setPosition(410, 238, 390, 35);
    text_ValueFuelRight.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_ValueFuelRight.setLinespacing(0);
    Unicode::snprintf(text_ValueFuelRightBuffer, TEXT_VALUEFUELRIGHT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4FBL).getText());
    text_ValueFuelRight.setWildcard(text_ValueFuelRightBuffer);
    text_ValueFuelRight.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WRR9));
    containerParameters.add(text_ValueFuelRight);

    scalableImage1_1_1_4.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BARS_272X480_TOP_DIM_DARK_ID));
    scalableImage1_1_1_4.setPosition(0, 275, 800, 44);
    scalableImage1_1_1_4.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage1_1_1_4);

    scalableImage2_1_1_4.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_CONTAINERS_LARGE_NARROW_NEUTRAL_ID));
    scalableImage2_1_1_4.setPosition(0, 319, 800, 2);
    scalableImage2_1_1_4.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    containerParameters.add(scalableImage2_1_1_4);

    text_FuelSum.setPosition(10, 284, 390, 37);
    text_FuelSum.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_FuelSum.setLinespacing(0);
    text_FuelSum.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BA1Q));
    containerParameters.add(text_FuelSum);

    text_ValueFuelSum.setPosition(410, 284, 390, 35);
    text_ValueFuelSum.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_ValueFuelSum.setLinespacing(0);
    Unicode::snprintf(text_ValueFuelSumBuffer, TEXT_VALUEFUELSUM_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ZJMG).getText());
    text_ValueFuelSum.setWildcard(text_ValueFuelSumBuffer);
    text_ValueFuelSum.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZPM1));
    containerParameters.add(text_ValueFuelSum);

    add(containerParameters);

    container1.setPosition(0, 0, 800, 75);
    box2.setPosition(0, -1, 800, 75);
    box2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    container1.add(box2);

    Clock.setPosition(659, 7, 124, 26);
    Clock.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Clock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JQ0U));
    Clock.displayLeadingZeroForHourIndicator(true);
    Clock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR_NO_SECONDS);
    Clock.setTime24Hour(10, 10, 0);
    container1.add(Clock);

    Text_KombiTitile.setPosition(198, 12, 240, 52);
    Text_KombiTitile.setColor(touchgfx::Color::getColorFromRGB(163, 186, 255));
    Text_KombiTitile.setLinespacing(0);
    Text_KombiTitile.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RA9L));
    container1.add(Text_KombiTitile);

    Text_Date.setPosition(657, 36, 128, 24);
    Text_Date.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Text_Date.setLinespacing(0);
    Unicode::snprintf(Text_DateBuffer, TEXT_DATE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AVVS).getText());
    Text_Date.setWildcard(Text_DateBuffer);
    Text_Date.setTypedText(touchgfx::TypedText(T___SINGLEUSE_R08T));
    container1.add(Text_Date);

    HomeIcon.setBitmap(touchgfx::Bitmap(BITMAP_HOME_ICON_ID));
    HomeIcon.setPosition(12, 9, 55, 55);
    HomeIcon.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container1.add(HomeIcon);

    ReturnIcon.setBitmap(touchgfx::Bitmap(BITMAP_RETURN_ID));
    ReturnIcon.setPosition(86, 10, 55, 55);
    ReturnIcon.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container1.add(ReturnIcon);

    HomeButton.setXY(12, 6);
    HomeButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_DISABLED_ID));
    HomeButton.setAction(buttonCallback);
    container1.add(HomeButton);

    ReturnButton.setXY(83, 6);
    ReturnButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_DISABLED_ID));
    ReturnButton.setAction(buttonCallback);
    container1.add(ReturnButton);

    Text_Temperature.setPosition(546, 10, 105, 52);
    Text_Temperature.setColor(touchgfx::Color::getColorFromRGB(247, 64, 174));
    Text_Temperature.setLinespacing(0);
    Unicode::snprintf(Text_TemperatureBuffer, TEXT_TEMPERATURE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_B5OB).getText());
    Text_Temperature.setWildcard(Text_TemperatureBuffer);
    Text_Temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0J0V));
    container1.add(Text_Temperature);

    add(container1);

    ConnectedModalWindow.setBackground(touchgfx::BitmapId(BITMAP_DARK_THEME_IMAGES_CONTAINERS_LARGE_WIDE_OUTLINED_LIGHT_ID), 160, 105);
    ConnectedModalWindow.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    ConnectedModalWindow.hide();
    Text_Popup.setPosition(61, 40, 377, 160);
    Text_Popup.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Text_Popup.setLinespacing(0);
    Text_Popup.setWideTextAction(WIDE_TEXT_WORDWRAP);
    Unicode::snprintf(Text_PopupBuffer, TEXT_POPUP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_09HL).getText());
    Text_Popup.setWildcard(Text_PopupBuffer);
    Text_Popup.setTypedText(touchgfx::TypedText(T___SINGLEUSE_37QK));
    ConnectedModalWindow.add(Text_Popup);

    ButtonHidePopup.setXY(143, 211);
    ButtonHidePopup.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUND_PRESSED_ID));
    ButtonHidePopup.setLabelText(touchgfx::TypedText(T___SINGLEUSE_XKUX));
    ButtonHidePopup.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtonHidePopup.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtonHidePopup.setAction(buttonCallback);
    ConnectedModalWindow.add(ButtonHidePopup);

    add(ConnectedModalWindow);
}

Diagnose_KOMBIViewBase::~Diagnose_KOMBIViewBase()
{

}

void Diagnose_KOMBIViewBase::setupScreen()
{

}

void Diagnose_KOMBIViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &HomeButton)
    {
        //SwitchToMainScreen
        //When HomeButton clicked change screen to MainScreen
        //Go to MainScreen with no screen transition
        application().gotoMainScreenScreenNoTransition();
    }
    if (&src == &ReturnButton)
    {
        //SwitchToDiagnose
        //When ReturnButton clicked change screen to Diagnose
        //Go to Diagnose with no screen transition
        application().gotoDiagnoseScreenNoTransition();
    }
    if (&src == &ButtonHidePopup)
    {
        //hideConnectedPopup
        //When ButtonHidePopup clicked hide ConnectedModalWindow
        //Hide ConnectedModalWindow
        ConnectedModalWindow.setVisible(false);
        ConnectedModalWindow.invalidate();
    }
}

void Diagnose_KOMBIViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &Button_SendUart)
    {
        //ButtonUartClicked
        //When Button_SendUart clicked call virtual function
        //Call ButtonUartClicked
        ButtonUartClicked();
    }
}
