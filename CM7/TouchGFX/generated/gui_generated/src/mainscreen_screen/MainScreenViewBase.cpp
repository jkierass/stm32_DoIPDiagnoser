/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mainscreen_screen/MainScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainScreenViewBase::MainScreenViewBase() :
    buttonCallback(this, &MainScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box1);

    backgroungImage.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BACKGROUNDS_480X272_SHATTERED_RAIN_ID));
    backgroungImage.setPosition(0, 74, 800, 405);
    backgroungImage.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(backgroungImage);

    container1.setPosition(0, 0, 800, 75);
    Text_Temperature.setPosition(546, 10, 105, 52);
    Text_Temperature.setColor(touchgfx::Color::getColorFromRGB(247, 64, 174));
    Text_Temperature.setLinespacing(0);
    Unicode::snprintf(Text_TemperatureBuffer, TEXT_TEMPERATURE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CGCY).getText());
    Text_Temperature.setWildcard(Text_TemperatureBuffer);
    Text_Temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05D4));
    container1.add(Text_Temperature);

    MainTitle.setPosition(12, 11, 447, 52);
    MainTitle.setColor(touchgfx::Color::getColorFromRGB(163, 186, 255));
    MainTitle.setLinespacing(0);
    MainTitle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AIJU));
    container1.add(MainTitle);

    Clock.setPosition(659, 7, 124, 26);
    Clock.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Clock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZDQ8));
    Clock.displayLeadingZeroForHourIndicator(true);
    Clock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR_NO_SECONDS);
    Clock.setTime24Hour(10, 10, 0);
    container1.add(Clock);

    Text_Date.setPosition(657, 36, 128, 24);
    Text_Date.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Text_Date.setLinespacing(0);
    Unicode::snprintf(Text_DateBuffer, TEXT_DATE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVFS).getText());
    Text_Date.setWildcard(Text_DateBuffer);
    Text_Date.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FZP7));
    container1.add(Text_Date);

    add(container1);

    DiagnoseIcon.setBitmap(touchgfx::Bitmap(BITMAP_LOGO_CROPPED_ID));
    DiagnoseIcon.setPosition(56, 112, 164, 164);
    DiagnoseIcon.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(DiagnoseIcon);

    Text_Diagnose.setPosition(56, 282, 164, 29);
    Text_Diagnose.setColor(touchgfx::Color::getColorFromRGB(163, 186, 255));
    Text_Diagnose.setLinespacing(0);
    Text_Diagnose.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6UML));
    add(Text_Diagnose);

    Text_Calculator.setPosition(289, 282, 164, 29);
    Text_Calculator.setColor(touchgfx::Color::getColorFromRGB(163, 186, 255));
    Text_Calculator.setLinespacing(0);
    Text_Calculator.setTypedText(touchgfx::TypedText(T___SINGLEUSE_10PZ));
    add(Text_Calculator);

    Text_DateAndTime.setPosition(497, 288, 194, 33);
    Text_DateAndTime.setColor(touchgfx::Color::getColorFromRGB(163, 186, 255));
    Text_DateAndTime.setLinespacing(0);
    Text_DateAndTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CDWB));
    add(Text_DateAndTime);

    SwitchToDiagnose.setXY(50, 107);
    SwitchToDiagnose.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_OUTLINE_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_OUTLINE_DISABLED_ID));
    SwitchToDiagnose.setAction(buttonCallback);
    add(SwitchToDiagnose);

    CalculatorIcon.setBitmap(touchgfx::Bitmap(BITMAP_CALCULATOR_LOGO_ID));
    CalculatorIcon.setPosition(289, 112, 164, 164);
    CalculatorIcon.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(CalculatorIcon);

    SwitchToCalculator.setXY(283, 107);
    SwitchToCalculator.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_OUTLINE_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_OUTLINE_DISABLED_ID));
    SwitchToCalculator.setAction(buttonCallback);
    add(SwitchToCalculator);

    DateIcon.setBitmap(touchgfx::Bitmap(BITMAP_LOGO_TIME_ID));
    DateIcon.setPosition(510, 113, 168, 163);
    DateIcon.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(DateIcon);

    SwitchToDate.setXY(506, 107);
    SwitchToDate.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_OUTLINE_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_OUTLINE_DISABLED_ID));
    SwitchToDate.setAction(buttonCallback);
    add(SwitchToDate);
}

MainScreenViewBase::~MainScreenViewBase()
{

}

void MainScreenViewBase::setupScreen()
{

}

void MainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &SwitchToDiagnose)
    {
        //SwitchToDiagnose
        //When SwitchToDiagnose clicked change screen to Diagnose
        //Go to Diagnose with no screen transition
        application().gotoDiagnoseScreenNoTransition();
    }
    if (&src == &SwitchToCalculator)
    {
        //SwitchToCalculator
        //When SwitchToCalculator clicked change screen to Calculator
        //Go to Calculator with no screen transition
        application().gotoCalculatorScreenNoTransition();
    }
    if (&src == &SwitchToDate)
    {
        //SwtichToDate
        //When SwitchToDate clicked change screen to Date
        //Go to Date with no screen transition
        application().gotoDateScreenNoTransition();
    }
}
