/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mainscreen_screen/MainScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainScreenViewBase::MainScreenViewBase() :
    buttonCallback(this, &MainScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    DiagnoseIcon.setBitmap(touchgfx::Bitmap(BITMAP_LOGO_CROPPED_ID));
    DiagnoseIcon.setPosition(101, 112, 89, 91);
    DiagnoseIcon.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(DiagnoseIcon);

    MainScreenClock.setPosition(529, 12, 256, 72);
    MainScreenClock.setColor(touchgfx::Color::getColorFromRGB(163, 186, 255));
    MainScreenClock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NI1A));
    MainScreenClock.displayLeadingZeroForHourIndicator(true);
    MainScreenClock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
    MainScreenClock.setTime24Hour(10, 10, 0);
    add(MainScreenClock);

    Text_Diagnose.setPosition(87, 214, 114, 26);
    Text_Diagnose.setColor(touchgfx::Color::getColorFromRGB(163, 186, 255));
    Text_Diagnose.setLinespacing(0);
    Text_Diagnose.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6UML));
    add(Text_Diagnose);

    Text_Calculator.setPosition(226, 214, 114, 26);
    Text_Calculator.setColor(touchgfx::Color::getColorFromRGB(163, 186, 255));
    Text_Calculator.setLinespacing(0);
    Text_Calculator.setTypedText(touchgfx::TypedText(T___SINGLEUSE_10PZ));
    add(Text_Calculator);

    MainTitle.setPosition(0, 12, 566, 69);
    MainTitle.setColor(touchgfx::Color::getColorFromRGB(163, 186, 255));
    MainTitle.setLinespacing(0);
    MainTitle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HFBR));
    add(MainTitle);

    SwitchToDiagnose.setXY(95, 107);
    SwitchToDiagnose.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_SMALL_OUTLINE_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_SMALL_OUTLINE_DISABLED_ID));
    SwitchToDiagnose.setAction(buttonCallback);
    add(SwitchToDiagnose);

    CalculatorIcon.setBitmap(touchgfx::Bitmap(BITMAP_CALCULATOR_LOGO_ID));
    CalculatorIcon.setPosition(239, 111, 89, 92);
    CalculatorIcon.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(CalculatorIcon);

    SwitchToCalculator.setXY(233, 107);
    SwitchToCalculator.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_SMALL_OUTLINE_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_SMALL_OUTLINE_DISABLED_ID));
    SwitchToCalculator.setAction(buttonCallback);
    add(SwitchToCalculator);
}

MainScreenViewBase::~MainScreenViewBase()
{

}

void MainScreenViewBase::setupScreen()
{

}

void MainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &SwitchToDiagnose)
    {
        //SwitchToDiagnose
        //When SwitchToDiagnose clicked change screen to Diagnose
        //Go to Diagnose with no screen transition
        application().gotoDiagnoseScreenNoTransition();
    }
    if (&src == &SwitchToCalculator)
    {
        //Interaction1
        //When SwitchToCalculator clicked change screen to Calculator
        //Go to Calculator with no screen transition
        application().gotoCalculatorScreenNoTransition();
    }
}
