/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/diagnose_screen/DiagnoseViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

DiagnoseViewBase::DiagnoseViewBase() :
    buttonCallback(this, &DiagnoseViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box1);

    SwitchToExtraVisual.setXY(160, 340);
    SwitchToExtraVisual.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_LARGE_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_LARGE_ROUND_PRESSED_ID));
    SwitchToExtraVisual.setLabelText(touchgfx::TypedText(T___SINGLEUSE_4NY5));
    SwitchToExtraVisual.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SwitchToExtraVisual.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    SwitchToExtraVisual.setAction(buttonCallback);
    add(SwitchToExtraVisual);

    container1.setPosition(0, 0, 800, 75);
    box2.setPosition(0, 0, 800, 75);
    box2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    container1.add(box2);

    Clock.setPosition(659, 7, 124, 26);
    Clock.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Clock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NR0L));
    Clock.displayLeadingZeroForHourIndicator(true);
    Clock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR_NO_SECONDS);
    Clock.setTime24Hour(10, 10, 0);
    container1.add(Clock);

    MainTitle.setPosition(138, 12, 240, 52);
    MainTitle.setColor(touchgfx::Color::getColorFromRGB(163, 186, 255));
    MainTitle.setLinespacing(0);
    MainTitle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_33RI));
    container1.add(MainTitle);

    Text_Date.setPosition(657, 36, 128, 24);
    Text_Date.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Text_Date.setLinespacing(0);
    Unicode::snprintf(Text_DateBuffer, TEXT_DATE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_BNDJ).getText());
    Text_Date.setWildcard(Text_DateBuffer);
    Text_Date.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BR4U));
    container1.add(Text_Date);

    Text_Temperature.setPosition(546, 10, 105, 52);
    Text_Temperature.setColor(touchgfx::Color::getColorFromRGB(247, 64, 174));
    Text_Temperature.setLinespacing(0);
    Unicode::snprintf(Text_TemperatureBuffer, TEXT_TEMPERATURE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SASM).getText());
    Text_Temperature.setWildcard(Text_TemperatureBuffer);
    Text_Temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X1VW));
    container1.add(Text_Temperature);

    HomeIcon.setBitmap(touchgfx::Bitmap(BITMAP_HOME_ICON_ID));
    HomeIcon.setPosition(12, 9, 55, 55);
    HomeIcon.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    container1.add(HomeIcon);

    HomeButton.setXY(9, 7);
    HomeButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_DISABLED_ID));
    HomeButton.setAction(buttonCallback);
    container1.add(HomeButton);

    add(container1);

    DMEButton.setXY(82, 107);
    DMEButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_FILL_ACTION_ID));
    DMEButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_JS26));
    DMEButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    DMEButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    DMEButton.setAction(buttonCallback);
    add(DMEButton);

    KOMBIButton.setXY(312, 107);
    KOMBIButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_FILL_ACTION_ID));
    KOMBIButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_V2G9));
    KOMBIButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    KOMBIButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    KOMBIButton.setAction(buttonCallback);
    add(KOMBIButton);

    IHKAButton.setXY(546, 107);
    IHKAButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_FILL_ACTION_ID));
    IHKAButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_2C73));
    IHKAButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    IHKAButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    IHKAButton.setAction(buttonCallback);
    add(IHKAButton);

    ConnectedModalWindow.setBackground(touchgfx::BitmapId(BITMAP_DARK_THEME_IMAGES_CONTAINERS_LARGE_WIDE_OUTLINED_LIGHT_ID), 160, 105);
    ConnectedModalWindow.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    ConnectedModalWindow.hide();
    Text_Popup.setPosition(61, 40, 377, 160);
    Text_Popup.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Text_Popup.setLinespacing(0);
    Text_Popup.setWideTextAction(WIDE_TEXT_WORDWRAP);
    Unicode::snprintf(Text_PopupBuffer, TEXT_POPUP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VQV7).getText());
    Text_Popup.setWildcard(Text_PopupBuffer);
    Text_Popup.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1ID8));
    ConnectedModalWindow.add(Text_Popup);

    ButtonHidePopup.setXY(143, 211);
    ButtonHidePopup.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUND_PRESSED_ID));
    ButtonHidePopup.setLabelText(touchgfx::TypedText(T___SINGLEUSE_23G3));
    ButtonHidePopup.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtonHidePopup.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtonHidePopup.setAction(buttonCallback);
    ConnectedModalWindow.add(ButtonHidePopup);

    add(ConnectedModalWindow);
}

DiagnoseViewBase::~DiagnoseViewBase()
{

}

void DiagnoseViewBase::setupScreen()
{

}

void DiagnoseViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &HomeButton)
    {
        //SwitchToMainScreen
        //When HomeButton clicked change screen to MainScreen
        //Go to MainScreen with no screen transition
        application().gotoMainScreenScreenNoTransition();
    }
    if (&src == &DMEButton)
    {
        //ChangeToDME
        //When DMEButton clicked change screen to Diagnose_DME
        //Go to Diagnose_DME with no screen transition
        application().gotoDiagnose_DMEScreenNoTransition();
    }
    if (&src == &ButtonHidePopup)
    {
        //hideConnectedPopup
        //When ButtonHidePopup clicked hide ConnectedModalWindow
        //Hide ConnectedModalWindow
        ConnectedModalWindow.setVisible(false);
        ConnectedModalWindow.invalidate();
    }
    if (&src == &KOMBIButton)
    {
        //ChangeToKOMBI
        //When KOMBIButton clicked change screen to Diagnose_KOMBI
        //Go to Diagnose_KOMBI with no screen transition
        application().gotoDiagnose_KOMBIScreenNoTransition();
    }
    if (&src == &IHKAButton)
    {
        //ChangeToIHKA
        //When IHKAButton clicked change screen to Diagnose_IHKA
        //Go to Diagnose_IHKA with no screen transition
        application().gotoDiagnose_IHKAScreenNoTransition();
    }
    if (&src == &SwitchToExtraVisual)
    {
        //SwitchToExtraVisual
        //When SwitchToExtraVisual clicked change screen to Diagnose_ExtraVisual
        //Go to Diagnose_ExtraVisual with no screen transition
        application().gotoDiagnose_ExtraVisualScreenNoTransition();
    }
}
